# Librarie Backend Application Configuration
quarkus.application.name=librarie
quarkus.application.version=1.0.0-SNAPSHOT

quarkus.flyway.migrate-at-start=true

# CORS Configuration for frontend access
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:4200
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS

# Librarie Application Configuration
# Storage settings
librarie.storage.max-file-size=104857600
librarie.storage.allowed-book-extensions=pdf,epub,mobi,azw,azw3,fb2,txt,rtf,doc,docx
librarie.storage.allowed-image-extensions=jpg,jpeg,png,gif,webp,bmp

# Demo mode settings  
librarie.demo.enabled=true
librarie.demo.book-count=100
librarie.demo.author-count=50
librarie.demo.series-count=20

# Security settings
librarie.security.sanitization-enabled=true
librarie.security.file-validation-enabled=true
librarie.security.max-request-size=10485760

quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n  

quarkus.otel.metrics.enabled=true
quarkus.otel.logs.enabled=true

quarkus.oidc.health.enabled=true

# Local storage base directory for assets (Maven target + assets)
librarie.storage.base-dir=assets
%dev.quarkus.datasource.dev-ui.allow-sql=true

# Metadata Providers Configuration
metadata.enabled=true
metadata.auto-approve=false
metadata.batch-fetch-on-import=true
metadata.rate-limit-per-second=10
metadata.timeout-seconds=10

# Google Books API
metadata.google.enabled=true
metadata.google.api-key=${GOOGLE_BOOKS_API_KEY:}
metadata.google.base-url=https://www.googleapis.com/books/v1
quarkus.rest-client.google-books-api.url=${metadata.google.base-url}
quarkus.rest-client.google-books-api.scope=jakarta.inject.Singleton

# Open Library API
metadata.open-library.enabled=true
metadata.open-library.base-url=https://openlibrary.org
quarkus.rest-client.open-library-api.url=${metadata.open-library.base-url}
quarkus.rest-client.open-library-api.scope=jakarta.inject.Singleton
