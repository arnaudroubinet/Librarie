name: Bundle Size Check

on:
  pull_request:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/bundle-size-check.yml'

jobs:
  check-bundle-size:
    runs-on: ubuntu-latest
    name: Monitor Bundle Size
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Build application
        working-directory: ./frontend
        run: npm run build
      
      - name: Check bundle size (PR)
        id: size_pr
        working-directory: ./frontend
        continue-on-error: true
        run: |
          echo "PR_SIZE_OUTPUT<<EOF" >> $GITHUB_OUTPUT
          npm run size 2>&1 | tee size_output.txt
          echo "EOF" >> $GITHUB_OUTPUT
          # Exit with the actual exit code from size-limit
          exit ${PIPESTATUS[0]}
      
      - name: Store PR bundle size result
        if: always()
        working-directory: ./frontend
        run: |
          if [ '${{ steps.size_pr.outcome }}' == 'success' ]; then
            echo "✅ Bundle size check PASSED" > pr_result.txt
          else
            echo "❌ Bundle size check FAILED - Bundle exceeds size limits" > pr_result.txt
          fi
          cat size_output.txt >> pr_result.txt
      
      - name: Checkout main branch
        if: always()
        uses: actions/checkout@v4
        with:
          ref: main
          path: main-branch
      
      - name: Build main branch
        if: always()
        working-directory: ./main-branch/frontend
        run: |
          npm ci
          npm run build
      
      - name: Check bundle size (main)
        if: always()
        working-directory: ./main-branch/frontend
        continue-on-error: true
        run: |
          npm run size > main_size.txt 2>&1 || true
      
      - name: Compare bundle sizes
        if: always()
        run: |
          echo "## Bundle Size Report" > comparison.md
          echo "" >> comparison.md
          
          if [ -f ./frontend/pr_result.txt ]; then
            cat ./frontend/pr_result.txt >> comparison.md
          fi
          
          echo "" >> comparison.md
          echo "### Comparison with main branch:" >> comparison.md
          echo "" >> comparison.md
          echo "**Main branch sizes:**" >> comparison.md
          echo "\`\`\`" >> comparison.md
          if [ -f ./main-branch/frontend/main_size.txt ]; then
            cat ./main-branch/frontend/main_size.txt >> comparison.md
          else
            echo "Could not retrieve main branch sizes" >> comparison.md
          fi
          echo "\`\`\`" >> comparison.md
      
      - name: Comment PR
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const comparison = fs.readFileSync('comparison.md', 'utf8');
            
            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Bundle Size Report')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comparison
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comparison
              });
            }
      
      - name: Fail if bundle size exceeds limits
        if: steps.size_pr.outcome == 'failure'
        run: |
          echo "❌ Bundle size exceeds configured limits!"
          echo "Please optimize your bundle or update the size limits in package.json"
          exit 1
